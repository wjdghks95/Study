<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xis="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xis:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

        <jee:jndi-lookup id="dataSource" jndi-name="jdbc/DefaultDS"/>

        <!--   iBastis     -->
        <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
                <property name="dataSource" ref="dataSource"/>
                <property name="configLocation" value="com/example/dataaccess/ibatis/SqlMapConfig.xml"/>
        </bean>

        <!--   JPA     -->
        <!--   LocalEntityManagerFactoryBean     -->
        <bean id="emf" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean"/>

        <!--   JavaEE 5 서버가 제공하는 EntityManagerFactory     -->
        <jee:jndi-lookup id="emf" jndi-name="persistence/myPersistenceUnit"/>

        <!--   LocalContainerEntityManagerFactoryBean     -->
        <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
                <property name="dataSource" ref="dataSource"/>
                <property name="jpaVendorAdapter">
                        <bean class="org.springframework.orm.jpa.vendor.TopLinkJpaVendorAdapter">
                                <property name="showSql" value="true"/>
                        </bean>
                </property>
                <property name="loadTimeWeaver">
                        <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
                </property>
        </bean>

        <!--   JPA용 트랜잭션 매니저     -->
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
                <property name="entityManagerFactory" ref="emf"/>
        </bean>

        <!--    @PersistenceUnit 사용시 필요    -->
        <context:annotation-config/>

        <!--   @Repository 애노테이션 예외 변환 후처리기     -->
        <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

        <!--   Hibernate     -->
        <!--   SessionFactory     -->
        <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
                <property name="dataSource" ref="dataSource"/>
                <property name="configLocation" value="com/example/dataaccess/hibernate/hibernate.cfg.xml"/>
                <property name="mappingLocations">
                        <list>
                                <value>com/example/dataaccess/hibernate/Member.hbm.xml</value>
                        </list>
                </property>
                <property name="hibernateProperties">
                        <props>
                                <prop key="dialect">org.hibernate.dialect.MySQLDialect</prop>
                                <prop key="cache.provider_class">org.hibernate.cache.NoCacheRegionFactoryAvailableException</prop>
                                <prop key="show_sql">true</prop>
                                <prop key="hbm2ddl.auto">update</prop>
                        </props>
                </property>
        </bean>

        <!--   하이버네이트 트랜잭션 매니저     -->
        <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
                <property name="sessionFactory" ref="sessionFactory"/>
        </bean>
</beans>